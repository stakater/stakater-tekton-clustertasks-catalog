apiVersion: tekton.dev/v1beta1
kind: ClusterTask
metadata:
  name: {{ include "stakater-push-main-tag.name" . }}
  annotations:
    description: |
      Push Tag in case of main branch
spec:
  workspaces:
  - name: source
  - name: ssh-directory
    optional: true
    description: |
      A .ssh directory with private key, known_hosts, config, etc. Copied to
      the user's home before git commands are executed. Used to authenticate
      with the git remote when performing the clone. Binding a Secret to this
      Workspace is strongly recommended over other volume types.
  params:
    - name: IMAGE_TAG
      description: Reference of the image tag
      type: string
    - name: PR_NUMBER
      description: In case of PR, PR number that is to be used in image tag. If this field is empty it means that it's a commit on main branch
      default: "NA"
    - name: GIT_REVISION
      description: The git revision
    - name: GIT_SECRET_NAME
      description: secret name with github/gitlab credentials of application repo
      default: "github-stakater-tekton-bot"
    - name: GITHUB_TOKEN_SECRET
      description: secret with ssh private key
      default: "NA"
  steps:
  - name: push-main-tag
    image: stakater/pipeline-toolbox:v0.0.20
    command: ["/bin/bash"]
    workingDir: $(workspaces.source.path)
    args:
      - -c
      - |
        set -e
        
        if [ $(params.PR_NUMBER) == "NA" ] && ( [ $(params.GIT_REVISION) == "main" ] || [ $(params.GIT_REVISION) == "master" ] ); then
          
          DIR="/workspace/ssh-directory/"
        
          if [ -d "$DIR" ]; then
            git config --global user.name tekton-bot
            git config --global user.email stakater-tekton-bot@stakater.com
            mkdir ~/.ssh
            ls -a ~/
            > ~/.ssh/known_hosts
            ls -a ~/.ssh
            eval `ssh-agent -s`
            ssh-keyscan -t rsa github.com >> ~/.ssh/known_hosts
            ssh-keyscan -H bitbucket.org >> ~/.ssh/known_hosts
            cp /workspace/ssh-directory/* ~/.ssh
            chmod 600 ~/.ssh/*
          fi
            git tag -am "Bump version to $(params.IMAGE_TAG)" $(params.IMAGE_TAG)
            git push --tags
        fi

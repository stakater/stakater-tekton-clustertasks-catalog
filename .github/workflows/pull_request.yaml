name: Pull Request
on:
  workflow_call:
    inputs:
      CONTAINER_REGISTRY_URL:
        required: true
        type: string

      HELM_REGISTRY_URL:
        required: true
        type: string

      SUBPATH:
        required: true
        type: string

      PUSH_CONTAINER_IMAGE:
        default: 'false'
        required: false
        type: string

      PUBLISH_HEM_CHART:
        default: 'false'
        required: false
        type: string

      NEXT_VERSION:
        required: false
        type: string

    secrets:
      REGISTRY_USERNAME:
        description: "Username for container registry to login"
        required: true

      REGISTRY_PASSWORD:
        description: "Password for container registry to login"
        required: true

jobs:
  build-and-push-container-image:
    name: Build and Push Container Image
    if: contains(inputs.PUSH_CONTAINER_IMAGE, 'true')
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3
      with:
        fetch-depth: '0'

    - run: echo ${{ github.event_name }}

    - name: Generate Tag
      id: generate_tag
      run: |
        sha=${{ github.event.pull_request.head.sha }}
        tag="SNAPSHOT-PR-${{ github.event.pull_request.number }}-${sha:0:8}"
        echo "##[set-output name=GIT_TAG;]$(echo ${tag})"
    
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Login to Container Registry
      uses: docker/login-action@v2
      with:
        registry: ${{ inputs.CONTAINER_REGISTRY_URL }}
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}

    - name: Build and Push Image
      uses: docker/build-push-action@v3
      with:
        context: ${{ inputs.SUBPATH }}
        tags: ${{ inputs.CONTAINER_REGISTRY_URL }}/${{ inputs.SUBPATH }}:${{ steps.generate_tag.outputs.GIT_TAG }}
        push: true
        labels: |
          org.opencontainers.image.source=${{ github.event.repository.clone_url }}
          org.opencontainers.image.created=${{ steps.prep.outputs.created }}
          org.opencontainers.image.revision=${{ github.sha }}

  package-and-push-helm-chart:
    name: Package and Push Helm Chart
    runs-on: ubuntu-latest
    needs:
    - build-and-push-container-image
    if: |
      always() && !contains(needs.*.result, 'failure') && contains(inputs.PUBLISH_HEM_CHART, 'true')

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3
      with:
        fetch-depth: '0'

    # Set up helm binary
    - name: Set up Helm
      uses: azure/setup-helm@v3
      with:
        version: v3.8.2

    - name: Login to Container Registry
      uses: docker/login-action@v2
      with:
        registry: ${{ inputs.CONTAINER_REGISTRY_URL }}
        username: ${{ secrets.REGISTRY_USERNAME }}
        password: ${{ secrets.REGISTRY_PASSWORD }}

    - name: Test and Package Helm Chart
      run: |
        sed -i "s/^version:.*/version:  ${{ inputs.NEXT_VERSION }}/" ${{ inputs.SUBPATH }}/helm/Chart.yaml
        helm lint ${{ inputs.SUBPATH }}/helm/
        helm -n test template ${{ inputs.SUBPATH }} ${{ inputs.SUBPATH }}/helm/
        helm package ${{ inputs.SUBPATH }}/helm/
    
    - name: Push Helm Chart to Registry
      run: |
        helm push ${{ inputs.SUBPATH }}-${{ inputs.NEXT_VERSION }}.tgz ${{ inputs.HELM_REGISTRY_URL }}
